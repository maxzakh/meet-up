{"version":3,"sources":["Event.js","EventList.js","api.js","Alert.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","showDetails","handleShowDetails","setState","getData","name","value","props","event","yes_rsvp_count","rsvp_limit","this","colors","className","local_date","local_time","group","venue","address_1","city","height","width","data","dataKey","nameKey","cx","cy","outerRadius","label","map","entry","index","key","fill","layout","verticalAlign","align","onClick","dangerouslySetInnerHTML","__html","description","Component","EventList","events","id","AWS_AUTH_URL","MEETUP_AUTH_URL","MEETUP_QUERY_URL","getOrRenewAccessToken","type","a","urlPart","url","localStorage","removeItem","axios","get","tokenInfo","setItem","access_token","refresh_token","Date","now","getSuggestions","query","window","location","href","startsWith","country","localized_country_name","name_string","zip","lat","lon","resultData","getAccessToken","token","console","log","result","getEvents","mockData","resultEvents","navigator","onLine","getItem","JSON","parse","suffix","stringify","accessToken","searchParams","URLSearchParams","search","code","rv","lastSavedTime","refreshToken","Alert","getStyle","color","style","text","InfoAlert","OfflineAlert","CitySearch","suggestions","handleInputChanged","target","then","length","infoText","handleItemClicked","updateEvents","onChange","item","NumberOfEvents","placeholder","App","page","offlineText","offLineAlert","countEventsOnADate","date","count","i","next7Days","currentDate","moment","add","dateString","format","push","number","addEventListener","online","margin","top","right","bottom","left","cursor","strokeDasharray","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","atatus","install"],"mappings":"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","file":"static/js/main.8f8133af.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { PieChart, Pie, Cell, ResponsiveContainer, Legend, Line, Tooltip } from 'recharts';\r\n\r\nclass Event extends Component {\r\n    state = {\r\n        showDetails: false,\r\n    }\r\n\r\n    handleShowDetails = () => {\r\n        if (this.state.showDetails === false) {\r\n            this.setState({ showDetails: true });\r\n        }\r\n        else {\r\n            this.setState({ showDetails: false });\r\n        }\r\n    }\r\n\r\n    getData = () => {\r\n        const taken = this.props.event.yes_rsvp_count;\r\n        const limit = this.props.event.rsvp_limit;\r\n        const available = limit - this.props.event.yes_rsvp_count;\r\n\r\n        return [\r\n            { name: \"Spots Taken\", value: taken },\r\n            { name: \"Spots available\", value: available },\r\n        ];\r\n    }\r\n\r\n    render() {\r\n        const { event } = this.props;\r\n        const colors = [\"#505160\", \"#AEBD38\"];\r\n\r\n        return (\r\n            <div className='event'>\r\n                <div>{event.local_date} {event.local_time}</div>\r\n                <div className='eventName name'>{event.name}</div>\r\n                {event.group && event.group.name && <div className='group-name'>Group: {event.group.name}</div>}\r\n                <div className='eventLocationAddress'>{(event.venue && event.venue.address_1) || ''}</div>\r\n                <div className='eventLocationCity'>{(event.venue && event.venue.city) || ''}</div>\r\n                {event.rsvp_limit && (\r\n                    <ResponsiveContainer height={200} width={200}>\r\n                        <PieChart>\r\n                            <Pie data={this.getData()} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={32} label >\r\n                                {\r\n                                    this.getData().map((entry, index) => (<Cell key={`cell-${index}`} fill={colors[index]} />))\r\n                                }\r\n                            </Pie>\r\n                            <Legend layout=\"vertical\" verticalAlign=\"bottom\" align=\"center\" />\r\n                            <Tooltip />\r\n                        </PieChart>\r\n                    </ResponsiveContainer>\r\n                )}\r\n                <button className='eventDetailsButton details-btn' onClick={this.handleShowDetails}>Show Details</button>\r\n                {this.state.showDetails && (\r\n                    <div className='eventDescription' dangerouslySetInnerHTML={{ __html: event.description }}></div>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {this.props.events.map(event =>\r\n                    <li key={event.id}>\r\n                        <Event event={event} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import mockData from './__tests__/Event.test.MockData.json';\r\nimport axios from 'axios';\r\n\r\nconst AWS_AUTH_URL = 'https://2u37kmztke.execute-api.eu-central-1.amazonaws.com/dev/api/';\r\nconst MEETUP_AUTH_URL = 'https://secure.meetup.com/oauth2/authorize?client_id=3eb98ifv4i1k0873gckn7i8j6g&response_type=code&redirect_uri=https://maxzakh.github.io/meet-up/';\r\nconst MEETUP_QUERY_URL = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query=';\r\nconst MEETUP_UPCOMING_EVENTS_URL = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public';\r\n\r\nasync function getOrRenewAccessToken(type, key) {\r\n    const urlPart = type === 'get' ? 'token' : type === 'renew' ? 'refresh' : '?';\r\n    let url = `${AWS_AUTH_URL}${urlPart}/${key}`;\r\n\r\n    localStorage.removeItem('access_token');\r\n    localStorage.removeItem('refresh_token');\r\n    localStorage.removeItem('last_saved_time');\r\n\r\n    const tokenInfo = await axios.get(url);\r\n\r\n    localStorage.setItem('access_token', tokenInfo.data.access_token);\r\n    localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\r\n    localStorage.setItem('last_saved_time', Date.now());\r\n\r\n    return tokenInfo.data.access_token;\r\n}\r\n\r\nasync function getSuggestions(query) {\r\n    if (window.location.href.startsWith('http://localhost')) {\r\n        return [\r\n            {\r\n                city: 'Munich',\r\n                country: 'de',\r\n                localized_country_name: 'Germany',\r\n                name_string: 'Munich, Germany',\r\n                zip: 'meetup3',\r\n                lat: 48.14,\r\n                lon: 11.58\r\n            },\r\n            {\r\n                city: 'Munich',\r\n                country: 'us',\r\n                localized_country_name: 'USA',\r\n                state: 'ND',\r\n                name_string: 'Munich, North Dakota, USA',\r\n                zip: '58352',\r\n                lat: 48.66,\r\n                lon: -98.85\r\n            }\r\n        ];\r\n    }\r\n\r\n    let resultData = [];\r\n    try {\r\n        const token = await getAccessToken();\r\n        console.log('resultData token', token);\r\n        const url = `${MEETUP_QUERY_URL}${query}&access_token=${token}`;\r\n        const result = await axios.get(url);\r\n        resultData = result.data;\r\n    } catch (error) {\r\n        console.log('resultData', error);\r\n        window.location.href = MEETUP_AUTH_URL;\r\n        // console.log('redirecting to auth server');\r\n    }\r\n    return resultData;\r\n}\r\n\r\nasync function getEvents(lat, lon) {\r\n    if (window.location.href.startsWith('http://localhost')) {\r\n        return mockData;\r\n    }\r\n\r\n    let resultEvents = [];\r\n\r\n    if (!navigator.onLine) {\r\n        resultEvents = localStorage.getItem('lastEvents');\r\n        return JSON.parse(resultEvents);\r\n    }\r\n\r\n    try {\r\n        const token = await getAccessToken();\r\n\r\n        let suffix = (lat && lon) ? `&lat=${lat}&lon=${lon}` : '';\r\n        let url = `${MEETUP_UPCOMING_EVENTS_URL}&access_token=${token}${suffix}`;\r\n\r\n        const result = await axios.get(url);\r\n        resultEvents = result.data.events;\r\n\r\n        localStorage.setItem('lastEvents', JSON.stringify(resultEvents));\r\n    } catch (error) {\r\n        console.log('cannot get events', error);\r\n    }\r\n    return resultEvents;\r\n}\r\n\r\nasync function getAccessToken() {\r\n    const accessToken = localStorage.getItem('access_token');\r\n\r\n    if (!accessToken) {\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = searchParams.get('code');\r\n        // console.log(`url code '${code}'`);\r\n\r\n        if (!code) {\r\n            window.location.href = MEETUP_AUTH_URL;\r\n            return null;\r\n        }\r\n\r\n        try {\r\n            var rv = getOrRenewAccessToken('get', code);\r\n        } catch (error) {\r\n            // window.location.href = MEETUP_AUTH_URL;\r\n            throw error;\r\n        }\r\n        return rv;\r\n    }\r\n\r\n    const lastSavedTime = localStorage.getItem('last_saved_time');\r\n\r\n    if (accessToken && (Date.now() - lastSavedTime < 3600000)) {\r\n        return accessToken;\r\n    }\r\n\r\n    const refreshToken = localStorage.getItem('refresh_token');\r\n    return getOrRenewAccessToken('renew', refreshToken);\r\n}\r\n\r\nexport { getSuggestions, getEvents };","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = null;\r\n    }\r\n\r\n    getStyle = () => {\r\n        return {\r\n            color: this.color,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Alert\">\r\n                <p style={this.getStyle()}>{this.props.text}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'blue';\r\n    }\r\n}\r\n\r\nclass OfflineAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'red';\r\n    }\r\n}\r\n\r\nexport { InfoAlert, OfflineAlert };","import React, { Component } from 'react';\r\nimport { getSuggestions } from './api';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n    state = {\r\n        query: '',\r\n        suggestions: []\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({ query: value });\r\n        getSuggestions(value).then(suggestions => {\r\n            this.setState({ suggestions });\r\n\r\n            if (value && suggestions.length === 0) {\r\n                this.setState({\r\n                    infoText: 'City not found'\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    infoText: '',\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    handleItemClicked = (value, lat, lon) => {\r\n        this.setState({ query: value, suggestions: [] });\r\n        this.props.updateEvents(lat, lon);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"city\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                />\r\n                <ul className=\"suggestions\">\r\n                    {this.state.suggestions.map(item =>\r\n                        <li key={item.name_string} onClick={() => this.handleItemClicked(item.name_string, item.lat, item.lon)}>{item.name_string}</li>\r\n                    )}\r\n                </ul>\r\n                <InfoAlert text={this.state.infoText} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n    state = {\r\n        query: 32\r\n    };\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({ query: value });\r\n        if (value <= 0) {\r\n            this.setState({\r\n                infoText: 'Cannot be less than 1'\r\n            });\r\n        } else {\r\n            this.setState({\r\n                infoText: ''\r\n            });\r\n        }\r\n        this.props.updateEvents(null, null, value);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='numberOfEvents'>\r\n                Displaying: {this.state.query} Events\r\n                <input\r\n                    className='number-of-events'\r\n                    type='number'\r\n                    onChange={this.handleInputChanged}\r\n                    value={this.state.query}\r\n                    placeholder='32'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NumberOfEvents;","import React, { Component } from 'react';\nimport moment from 'moment';\nimport {\n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer\n} from 'recharts'; import './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents } from './api';\nimport { OfflineAlert } from './Alert';\n\nclass App extends Component {\n  state = {\n    events: [],\n    page: null,\n    offlineText: '',\n  }\n\n  componentDidMount() {\n    this.updateEvents();\n    window.addEventListener('online', this.offLineAlert());\n  }\n\n  offLineAlert = () => {\n    if (!navigator.onLine) {\n      this.setState({\n        offlineText:\n          'No internet connetion, please reconnect to update event information. This is a cached list',\n      });\n    } else {\n      this.setState({\n        offlineText: '',\n      });\n    }\n  };\n\n  countEventsOnADate = (date) => {\n    let count = 0;\n    for (let i = 0; i < this.state.events.length; i += 1) {\n      if (this.state.events[i].local_date === date) {\n        count += 1;\n      }\n    }\n    return count;\n  }\n\n  getData = () => {\n    const next7Days = []; // Create empty array for the next 7 days\n    const currentDate = moment(); // Today\n    // Loop 7 times for next 7 days\n    for (let i = 0; i < 7; i += 1) {\n      currentDate.add(1, 'days'); // Add 1 day to current date, currentDate changes\n      const dateString = currentDate.format('YYYY-MM-DD'); // Format the date\n      // Use the countEventsOnADate function to count #events on this date\n      const count = this.countEventsOnADate(dateString);\n      next7Days.push({ date: dateString, number: count }); // Add this date and number to the list\n    }\n    return next7Days;\n  }\n\n  updateEvents = (lat, lon, page) => {\n    if (lat && lon) {\n      getEvents(lat, lon, this.state.page).then(events =>\n        this.setState({ events, lat, lon })\n      );\n    } else if (page) {\n      getEvents(this.state.lat, this.state.lon, page).then(events =>\n        this.setState({ events, page })\n      );\n    } else {\n      getEvents(this.state.lat, this.state.lon, this.state.page).then(events =>\n        this.setState({ events })\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {!window.navigator.online\n          ?\n          (<OfflineAlert text={this.state.offlineText} />)\n          :\n          (<CitySearch updateEvents={this.updateEvents} />)\n        }\n        <EventList events={this.state.events} />\n        <NumberOfEvents updateEvents={this.updateEvents} />\n        <ResponsiveContainer height={400}>\n          <ScatterChart\n            margin={{\n              top: 20, right: 20, bottom: 20, left: 20,\n            }}\n          >\n            <CartesianGrid />\n            <XAxis type=\"category\" dataKey=\"date\" name=\"date\" />\n            <YAxis type=\"number\" dataKey=\"number\" name=\"number of events\" />\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n            <Scatter data={this.getData()} fill=\"#8884d8\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as atatus from 'atatus-js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\natatus.config('3f80447c97864c36b09386e8e117d418').install();\n"],"sourceRoot":""}